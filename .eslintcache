[{"/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/initialValues.js":"1","/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/mentionables.js":"2","/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/reportWebVitals.js":"3","/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/autoformatRules.js":"4","/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/index.js":"5","/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/App.js":"6"},{"size":29836,"mtime":1608322591965,"results":"7","hashOfConfig":"8"},{"size":12023,"mtime":1608322085326,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608320479996,"results":"10","hashOfConfig":"8"},{"size":2280,"mtime":1608321947806,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1608320479995,"results":"12","hashOfConfig":"8"},{"size":8568,"mtime":1608322563283,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"htzbd0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},"/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/initialValues.js",[],"/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/mentionables.js",[],["28","29"],"/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/reportWebVitals.js",[],"/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/autoformatRules.js",[],"/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/index.js",[],"/Users/micfrenkel/paypal/PROTOTYPE-DEC-17/slate-plugins/src/App.js",["30"],"import React, { useMemo, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createEditor } from \"slate\";\nimport { withHistory } from \"slate-history\";\nimport { Slate, withReact } from \"slate-react\";\nimport {\n  AlignPlugin,\n  BalloonToolbar,\n  BlockquotePlugin,\n  BoldPlugin,\n  CodeBlockPlugin,\n  CodePlugin,\n  withList,\n  decorateSearchHighlight,\n  EditablePlugins,\n  ExitBreakPlugin,\n  HeadingPlugin,\n  HeadingToolbar,\n  HighlightPlugin,\n  ImagePlugin,\n  ItalicPlugin,\n  LinkPlugin,\n  ListPlugin,\n  MARK_BOLD,\n  MARK_CODE,\n  MARK_ITALIC,\n  MARK_STRIKETHROUGH,\n  MARK_SUBSCRIPT,\n  MARK_SUPERSCRIPT,\n  MARK_UNDERLINE,\n  MediaEmbedPlugin,\n  MentionPlugin,\n  MentionSelect,\n  ParagraphPlugin,\n  ResetBlockTypePlugin,\n  pipe,\n  SearchHighlightPlugin,\n  SoftBreakPlugin,\n  StrikethroughPlugin,\n  SubscriptPlugin,\n  SuperscriptPlugin,\n  TablePlugin,\n  TodoListPlugin,\n  ToolbarAlign,\n  ToolbarElement,\n  ToolbarImage,\n  ToolbarLink,\n  ToolbarList,\n  ToolbarMark,\n  ToolbarSearchHighlight,\n  UnderlinePlugin,\n  useMention,\n  withAutoformat,\n  withDeserializeHTML,\n  withImageUpload,\n  withInlineVoid,\n  withLink,\n  deserializeHTMLToDocumentFragment,\n  withNormalizeTypes,\n  withTable,\n  withTrailingNode,\n  serializeHTMLFromNodes,\n  withMarks,\n  KbdPlugin,\n  MARK_KBD,\n} from \"@udecode/slate-plugins\";\nimport { MENTIONABLES } from \"./mentionables\";\nimport { autoformatRules } from \"./autoformatRules\";\nimport {\n  headingTypes,\n  initialValueAutoformat,\n  initialValueBasicElements,\n  initialValueBasicMarks,\n  initialValueEmbeds,\n  initialValueExitBreak,\n  initialValueForcedLayout,\n  initialValueHighlight,\n  initialValueImages,\n  initialValueLinks,\n  initialValueList,\n  initialValueMentions,\n  initialValuePasteHtml,\n  initialValueSoftBreak,\n  initialValueTables,\n  options,\n  optionsResetBlockTypes,\n} from \"./initialValues\";\nconst plugins = [\n  ParagraphPlugin(options),\n  BlockquotePlugin(options),\n  TodoListPlugin(options),\n  HeadingPlugin(options),\n  ImagePlugin(options),\n  LinkPlugin(options),\n  KbdPlugin(options),\n  ListPlugin(options),\n  MentionPlugin(options),\n  TablePlugin(options),\n  AlignPlugin(options),\n  MediaEmbedPlugin(options),\n  CodeBlockPlugin(options),\n  BoldPlugin(options),\n  CodePlugin(options),\n  ItalicPlugin(options),\n  HighlightPlugin(options),\n  SearchHighlightPlugin(options),\n  UnderlinePlugin(options),\n  StrikethroughPlugin(options),\n  SubscriptPlugin(options),\n  SuperscriptPlugin(options),\n  ResetBlockTypePlugin(optionsResetBlockTypes),\n  SoftBreakPlugin({\n    rules: [\n      { hotkey: \"shift+enter\" },\n      {\n        hotkey: \"enter\",\n        query: {\n          allow: [\n            options.code_block.type,\n            options.blockquote.type,\n            options.td.type,\n          ],\n        },\n      },\n    ],\n  }),\n  ExitBreakPlugin({\n    rules: [\n      {\n        hotkey: \"mod+enter\",\n      },\n      {\n        hotkey: \"mod+shift+enter\",\n        before: true,\n      },\n      {\n        hotkey: \"enter\",\n        query: {\n          start: true,\n          end: true,\n          allow: headingTypes,\n        },\n      },\n    ],\n  }),\n];\nconst withPlugins = [\n  withReact,\n  withHistory,\n  withTable(options),\n  withLink(options),\n  withList(options),\n  withDeserializeHTML({ plugins }),\n  withImageUpload(),\n  withAutoformat({ rules: autoformatRules }),\n  withMarks(),\n  withNormalizeTypes({\n    rules: [{ path: [0, 0], strictType: options.h1.type }],\n  }),\n  withTrailingNode({ type: options.p.type, level: 1 }),\n  withInlineVoid({ plugins }),\n];\nconst initialValue = [\n  ...initialValueForcedLayout,\n  ...initialValueBasicMarks,\n  ...initialValueHighlight,\n  ...initialValueBasicElements,\n  ...initialValueList,\n  ...initialValueTables,\n  ...initialValueLinks,\n  ...initialValueMentions,\n  ...initialValueImages,\n  ...initialValueEmbeds,\n  ...initialValueAutoformat,\n  ...initialValueSoftBreak,\n  ...initialValueExitBreak,\n  ...initialValuePasteHtml,\n  {\n    children: deserializeHTMLToDocumentFragment({\n      plugins,\n      element: \"<p>Deserialized paragraph here.</p>\",\n    }),\n  },\n];\nconst App = () => {\n  const [value, setValue] = useState(initialValue);\n  const editor = useMemo(() => pipe(createEditor(), ...withPlugins), []);\n  const [search, setSearchHighlight] = useState(\"\");\n  const decorate = [decorateSearchHighlight({ search })];\n  const {\n    index,\n    search: mentionSearch,\n    values,\n    target,\n    onChangeMention,\n    onKeyDownMention,\n  } = useMention(MENTIONABLES, {\n    maxSuggestions: 10,\n  });\n  const onKeyDown = [onKeyDownMention];\n  return React.createElement(\n    Slate,\n    {\n      editor: editor,\n      value: value,\n      onChange: (newValue) => {\n        setValue(newValue);\n        if (JSON.stringify(newValue) !== JSON.stringify(value)) {\n          const serializedHTML = serializeHTMLFromNodes({\n            plugins,\n            nodes: newValue,\n          });\n          console.log(\"serialized nodes\", serializedHTML);\n        }\n        onChangeMention(editor);\n      },\n    },\n    React.createElement(ToolbarSearchHighlight, {\n      icon: () => React.createElement(\"div\", null),\n      setSearch: setSearchHighlight,\n    }),\n    React.createElement(\n      HeadingToolbar,\n      null,\n      React.createElement(ToolbarElement, { type: options.h1.type, icon: 1 }),\n      React.createElement(ToolbarElement, { type: options.h2.type, icon: 2 }),\n      React.createElement(ToolbarElement, { type: options.h3.type, icon: 3 }),\n      React.createElement(ToolbarElement, { type: options.h4.type, icon: 4 }),\n      React.createElement(ToolbarElement, { type: options.h5.type, icon: 5 }),\n      React.createElement(ToolbarElement, { type: options.h6.type, icon: 6 }),\n      React.createElement(ToolbarMark, { type: MARK_BOLD, icon: \"B\" }),\n      React.createElement(ToolbarMark, { type: MARK_ITALIC, icon: \"I\" }),\n      React.createElement(ToolbarMark, { type: MARK_UNDERLINE, icon: \"U\" }),\n      React.createElement(ToolbarMark, { type: MARK_STRIKETHROUGH, icon: \"S\" }),\n      React.createElement(ToolbarMark, { type: MARK_CODE, icon: \"C\" }),\n      React.createElement(ToolbarMark, { type: MARK_KBD, icon: \"K\" }),\n      React.createElement(ToolbarMark, {\n        type: MARK_SUPERSCRIPT,\n        clear: MARK_SUBSCRIPT,\n        icon: \"SP\",\n      }),\n      React.createElement(ToolbarMark, {\n        type: MARK_SUBSCRIPT,\n        clear: MARK_SUPERSCRIPT,\n        icon: \"SB\",\n      }),\n      React.createElement(\n        ToolbarList,\n        Object.assign({}, options, { typeList: options.ul.type, icon: \"UL\" })\n      ),\n      React.createElement(\n        ToolbarList,\n        Object.assign({}, options, { typeList: options.ol.type, icon: \"OL\" })\n      ),\n      React.createElement(ToolbarElement, {\n        type: options.blockquote.type,\n        icon: \"BQ\",\n      }),\n      React.createElement(ToolbarElement, {\n        type: options.code_block.type,\n        icon: \"CB\",\n      }),\n      React.createElement(ToolbarAlign, { icon: \"al\" }),\n      React.createElement(ToolbarAlign, {\n        type: options.align_center.type,\n        icon: \"ac\",\n      }),\n      React.createElement(ToolbarAlign, {\n        type: options.align_right.type,\n        icon: \"ar\",\n      }),\n      React.createElement(\n        ToolbarLink,\n        Object.assign({}, options, { icon: \"A\" })\n      ),\n      React.createElement(\n        ToolbarImage,\n        Object.assign({}, options, { icon: \"IMG\" })\n      )\n    ),\n    React.createElement(\n      BalloonToolbar,\n      { arrow: true },\n      React.createElement(ToolbarMark, {\n        reversed: true,\n        type: MARK_BOLD,\n        icon: \"B\",\n        tooltip: { content: \"Bold (⌘B)\" },\n      }),\n      React.createElement(ToolbarMark, {\n        reversed: true,\n        type: MARK_ITALIC,\n        icon: \"I\",\n        tooltip: { content: \"Italic (⌘I)\" },\n      }),\n      React.createElement(ToolbarMark, {\n        reversed: true,\n        type: MARK_UNDERLINE,\n        icon: \"U\",\n        tooltip: { content: \"Underline (⌘U)\" },\n      })\n    ),\n    React.createElement(MentionSelect, {\n      at: target,\n      valueIndex: index,\n      options: values,\n    }),\n    React.createElement(EditablePlugins, {\n      style: {\n        fontFamily:\n          '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"',\n      },\n      plugins: plugins,\n      decorate: decorate,\n      decorateDeps: [search],\n      renderLeafDeps: [search],\n      onKeyDown: onKeyDown,\n      onKeyDownDeps: [index, mentionSearch, target],\n      placeholder: \"Enter some plain text...\",\n    })\n  );\n};\n\n\nexport default App;\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":16},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]